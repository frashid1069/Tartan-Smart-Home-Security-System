name: Build, Test, and Deploy

on:
  push:
    branches:
      - "*"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'adopt'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches  
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and Test
        run: |
          cd smart-home
          cd Platform
          ./gradlew clean build

      - name: set up pytest
        run: pip install pytest requests beautifulsoup4

      # - name: Run System tests
      #   working-directory: ./smart-home
      #   run: pytest system_tests.py

      - name: Jacoco report
        id: jacoco
        working-directory: ./smart-home/Platform
        run: ./gradlew jacocoTestReport


  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set Docker Hub Username in Env
        run: |
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" >> $GITHUB_ENV

      - name: Substitute environment variable in docker-compose.yml
        run: |
          envsubst < smart-home/docker-compose.yml > smart-home/docker-compose.generated.yml

      - name: Build Docker images
        run: |
          docker-compose -f smart-home/docker-compose.generated.yml build

      - name: Tag Docker images with 'latest' and 'previous'
        run: |
          docker tag smart-home_platform:latest smart-home_platform:previous

      - name: Push Docker images
        run: |
          docker-compose -f smart-home/docker-compose.generated.yml push

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-docker
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Test IPv6 connectivity
  #       run: |
  #         ping6 -c 4 ${{ secrets.SSH_HOST }}
  #     - name: Install SSH key from .pem file
  #       run: |
  #         # Save the .pem file content to a file
  #         echo "${{ secrets.SSH_PEM_KEY }}" > deploy-key.pem
  #         # Set correct permissions for the .pem file
  #         chmod 600 deploy-key.pem

  #     - name: Deploy to VM using IPv6
  #       run: |
  #         ssh -o StrictHostKeyChecking=no \
  #             -i deploy-key.pem \
  #             ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
  #         cd /path/to/your/project
  #         git pull origin main
  #         docker-compose down
  #         docker-compose up -d
  #         EOF

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SSH key
        run: |
          echo "${{ secrets.SSH_PEM_KEY }}" > deploy-key.pem
          chmod 600 deploy-key.pem

      - name: Test IPv6 connectivity
        run: |
          ping6 -c 4 ${{ secrets.SSH_HOST }}

      - name: Deploy to VM using SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i deploy-key.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /path/to/your/project
            git pull origin main
            docker-compose down
            docker-compose up -d
          EOF